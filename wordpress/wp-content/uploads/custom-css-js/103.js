/******* Do not edit this file *******
Simple Custom CSS and JS - by Silkypress.com
Saved: Jul 17 2020 | 07:43:11 */
function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * demo.js
 * http://www.codrops.com
 *
 * Licensed under the MIT license.
 * http://www.opensource.org/licenses/mit-license.php
 *
 * Copyright 2018, Codrops
 * http://www.codrops.com
 */
{
  // from http://www.quirksmode.org/js/events_properties.html#position
  var getMousePos = function getMousePos(e) {
    var posx = 0;
    var posy = 0;
    if (!e) e = window.event;

    if (e.pageX || e.pageY) {
      posx = e.pageX;
      posy = e.pageY;
    } else if (e.clientX || e.clientY) {
      posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
      posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
    }

    return {
      x: posx,
      y: posy
    };
  }; // Effect 15


  var HoverImgFx15 = /*#__PURE__*/function () {
    "use strict";

    function HoverImgFx15(el) {
      _classCallCheck(this, HoverImgFx15);

      this.DOM = {
        el: el
      };
      this.DOM.reveal = document.createElement('div');
      this.DOM.reveal.className = 'hover-reveal';
      this.totalImages = 5;
      var inner = '';

      for (var i = 0; i <= this.totalImages - 1; ++i) {
        inner += "<div class=\"hover-reveal__img\" style=\"position: absolute; background-image:url(".concat(this.DOM.el.dataset.img, ")\"></div>");
      }

      this.DOM.reveal.innerHTML = inner;
      this.DOM.el.appendChild(this.DOM.reveal);
      this.DOM.revealImgs = _toConsumableArray(this.DOM.reveal.querySelectorAll('.hover-reveal__img'));
      this.initEvents();
    }

    _createClass(HoverImgFx15, [{
      key: "initEvents",
      value: function initEvents() {
        var _this = this;

        this.positionElement = function (ev) {
          var mousePos = getMousePos(ev);
          var docScrolls = {
            left: document.body.scrollLeft + document.documentElement.scrollLeft,
            top: document.body.scrollTop + document.documentElement.scrollTop
          };
          _this.DOM.reveal.style.top = "".concat(mousePos.y + 20 - docScrolls.top, "px");
          _this.DOM.reveal.style.left = "".concat(mousePos.x + 20 - docScrolls.left, "px");
        };
        
        this.tweenElement = function (ev) {
          var mousePos = getMousePos(ev);
          var docScrolls = {
            left: document.body.scrollLeft + document.documentElement.scrollLeft,
            top: document.body.scrollTop + document.documentElement.scrollTop
          };
          
          TweenMax.to(_this.DOM.reveal, 1, {"top":mousePos.y + -100 - docScrolls.top, "left":mousePos.x + 20 - docScrolls.left, ease:Power4.easeOut})
        };
        
        this.mouseenterFn = function (ev) {
          _this.positionElement(ev);

          _this.showImage();
        };

        this.mousemoveFn = function (ev) {
          return requestAnimationFrame(function () {
            _this.tweenElement(ev);
          });
        };

        this.mouseleaveFn = function () {
          _this.hideImage();
        };

        this.DOM.el.addEventListener('mouseenter', this.mouseenterFn);
        this.DOM.el.addEventListener('mousemove', this.mousemoveFn);
        this.DOM.el.addEventListener('mouseleave', this.mouseleaveFn);
      }
    }, {
      key: "showImage",
      value: function showImage() {
        var _this2 = this;

        TweenMax.killTweensOf(this.DOM.revealImgs);
        this.tl = new TimelineMax({
          onStart: function onStart() {
            _this2.DOM.reveal.style.opacity = 1;
            TweenMax.set(_this2.DOM.el, {
              zIndex: 1000
            });
          }
        }).set(this.DOM.revealImgs, {
          opacity: 0
        });

        for (var i = 0; i <= this.totalImages - 1; ++i) {
          TweenMax.set(this.DOM.revealImgs[i], {
            x: "".concat((this.totalImages - 1 - i) * 5, "%"),
            y: "".concat((this.totalImages - 1 - i) * 10, "%")
          });
          this.tl.add(new TweenMax(this.DOM.revealImgs[i], i === this.totalImages - 1 ? 1.2 : 0.55, {
            ease: i === this.totalImages - 1 ? Quint.easeOut : Quad.easeOut,
            startAt: i === this.totalImages - 1 ? {
              opacity: 1,
              x: '5%',
              y: '10%'
            } : {
              opacity: 1
            },
            opacity: i === this.totalImages - 1 ? 1 : 0,
            x: i === this.totalImages - 1 ? '0%' : null,
            y: i === this.totalImages - 1 ? '0%' : null
          }), i * 0.04);
        }
      }
    }, {
      key: "hideImage",
      value: function hideImage() {
        var _this3 = this;

        TweenMax.killTweensOf(this.DOM.revealImgs);
        this.tl = new TimelineMax({
          onStart: function onStart() {
            TweenMax.set(_this3.DOM.el, {
              zIndex: 999
            });
          },
          onComplete: function onComplete() {
            TweenMax.set(_this3.DOM.el, {
              zIndex: ''
            });
            TweenMax.set(_this3.DOM.reveal, {
              opacity: 0
            });
          }
        }).add(new TweenMax(this.DOM.revealImgs[this.totalImages - 1], 0.15, {
          ease: Sine.easeOut,
          opacity: 0
        }));
      }
    }]);

    return HoverImgFx15;
  }();

  _toConsumableArray(document.querySelectorAll('[data-fx="15"] > a, .albumtext[data-fx="15"]')).forEach(function (link) {
    return new HoverImgFx15(link);
  }); // Demo purspose only: Preload all the images in the page..


  var contentel = document.querySelector('.content');

  _toConsumableArray(document.querySelectorAll('.block__title, .block__link, .content__text-link')).forEach(function (el) {
    var imgsArr = el.dataset.img.split(',');

    for (var i = 0, len = imgsArr.length; i <= len - 1; ++i) {
      var imgel = document.createElement('img');
      imgel.style.visibility = 'hidden';
      imgel.style.width = 0;
      imgel.src = imgsArr[i];
      imgel.className = 'preload';
      contentel.appendChild(imgel);
    }
  });
}